CURRENT: FMM 
** FMM
** replace unittest-cpp with Catch (header only!)
** replace boost with cython
** Redo elastic solver
** tbempy python package and tbempy_elastic python package
** hanging nodes

MISC:
** see how FMM accuracy changes as a function of
    1) radius of equivalent surface
    2) radius of check surface
    3) order of expansion
    4) multipole acceptance criteria

** move obs, src loop into the kernel functions
** sse/avx implementation of kernel functions
Use blas SVD

** nearest_neighbors for point->triangle or triangle->triangle intersection
** Handle the general case when fault-surface intersection does not occur at a vertex.
-- Linked to hanging nodes in that lots of geometry code needs to be used/written.
-- (DD) Should I use CGAL or other comp-geom library (write a note on the decision)

** crack-tip elements
** characterize the galerkin BEM for hypersingular kernels
** characterize the sinh-sigmoidal method
** get rid of non-block operators and rename "Block___" to "___"
** Storing the kernel by reference in the integration methods is bad. fix.
** Clear out all "inline"
** consider getting rid of vectorx, or replacing with a facade over Eigen? or over numpy?
** use iterators for traversing point sets?
** turn some of the stuff in basis and numerics into a "Basis" class
** move continuity builder stuff to cpp file

BETTER BUILD SYSTEM:
** test the build system on mac, a fresh ubuntu, odyssey/meade02, don't support windows
