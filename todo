CURRENT: MISC
** acceptance test: sparse ILU of near field matrix
** acceptance test: setup fmm operators for python wrapper

** finish setting up the elastic solver
** easy load/save for solved problems
** try again on compiling on mac osx

KERNEL OVERHAUL
** replace references to the kernel by pointer to the kernel
** move obs, src loop into the kernel functions which will reduce the number of function calls and also allow sse/avx implementations of those kernel functions

NEXT: hanging nodes 
** nearest_neighbors for point->triangle or triangle->triangle intersection
** Handle the general case when fault-surface intersection does not occur at a vertex.
-- Linked to hanging nodes in that lots of geometry code needs to be used/written.
-- (DD) Should I use CGAL or other comp-geom library (write a note on the decision)

INTEGRATION:
** try using one shifted observation point globally rather than a different one for each local integral
** finish up the sinh-sigmoidal work
** characterize the sinh-sigmoidal method
** crack-tip elements

MISC:
** test the build system on a fresh ubuntu
** use iterators for traversing point sets?
** characterize the galerkin BEM for hypersingular kernels
** see how FMM accuracy changes as a function of
    1) radius of equivalent surface
    2) radius of check surface
    3) order of expansion
    4) multipole acceptance criteria
** get rid of non-block operators and rename "Block___" to "___"
** automated build testing on mac, ubuntu, with clang, gcc, intel compilers 
** split out the fmm scheduler/traversal
** some simple capacity tests. how to make sure these run in the same conditions?
** operators should be just one double array
** move continuity builder stuff to cpp file
-- this may imply using a struct or redesigning the interface
** BUILTIN_FLOAT_DTYPE(16) in boost_numpy fails on odyssey
