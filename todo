** redesign the elastic input system to take more flexible input -- maybe various types that all implement some general element interface
** add a step in the elastic preprocessing to cut surfaces where displacement is unknown at fault intersections
** add an option in the elastic solver to perform adaptive mesh refinement

** reproduce simple infinite critical taper wedge models
** reproduce yin 1993 results

** frictional bcs -- constraint that says shear = f * normal, with f a constant, i.e. no friction law
** non-fault mixed bcs
** continuous displacement discontinuities?

** logging in the c++ layer, how to integrate with logging in the python layer

ARRANGEMENTS AND VOLUMETRIC MESHING
** interior meshing allowing beautiful interior plots
** identifying the interior from just the boundary
** make interior plotting easier

FOR FUN:
-- as an added challenge, ongoing work with these must not interfere with the needed work above
** hanging nodes should be relatively easy now that the facet-facet intersection algorithms work well
** interpolation
** the kernel work
** acceptance test #2: adaptively refined okada solution (using the real error as the refinement criterion, so not technically adaptive meshing yet)

MISC:
** BUILTIN_FLOAT_DTYPE(16) in boost_numpy fails on odyssey
