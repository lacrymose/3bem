CURRENT: Bug fixes and ease of use improvements while I work on elastic solver.
** hanging nodes!
** crack-tip elements
** characterize the galerkin BEM for hypersingular kernels
** characterize the sinh-sigmoidal method

-- Clear out all "inline"
---------------------------------------

MILESTONE: HANGING NODES AND COMPLEX GEOMETRIES
S: Pull some of vec.h out into a separate module "geometry.h"
NF: Hanging nodes?
NF: Handle the general case when fault-surface intersection does not occur at a vertex.
---- Linked to hanging nodes in that lots of geometry code needs to be used/written.
---- (DD) Should I use CGAL or other comp-geom library (write a note on the decision)

---------------------------------------

MILESTONE: FMM-BEM INTEGRATION
DD: BIG: decide whether to use the direct FMM-based inversion methods.

MF: Change the mass_operator to be the galerkin operator? What difficulties does this introduce? Is this correct?
NF: Interface for Operators -- extend with sparse matrix operators and FMMOperator
-- start with a second operator type that recomputes the far-field but only computes the near-field once. this will break the current memory barrier and clarify the interface with an easy test case. the fmm case mixes up the operator problem together with the approximation problem. attack one at a time
-- move mat_mult to be a member function for an operator?

NF: Imagine some kind of general purpose "nearfield" structure that can allow a simple O(N) solution to the near neighbors problems in mesh_continuity, apply_discontinuities as well as the FMM tree structure.
NF: Once FMM-BEM integration is completed, a sparse matrix storage format should be used for the nearfield entries.
NF: A method that creates a non-matrix based operator that consists of strengths of point sources. First, evaluate this with a direct multiplication interaction.
NF: FMM!
NF: Used the FMMOperator to perform an FMM evaluation within an iteration. 

--------------------------------------- Unaffiliated tasks
TESTS(T):
DESIGN DECISIONS(DD):
NEW FUNCTIONALITY(NF):
MODIFIED FUNCTIONALITY(MF):
STRUCTURAL(S):
OPTIMIZATION(O):
